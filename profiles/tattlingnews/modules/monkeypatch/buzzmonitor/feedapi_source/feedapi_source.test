<?php

class FeedAPISourceTestCase extends DrupalWebTestCase {

  function getInfo() {
      return array(
        'name' => t('Feed Item Source Extraction'),
        'description' => t('Test Source Extraction'),
        'group' => t('FeedAPISource'),
      );
  }
  
  function setUp() {
    parent::setUp('feedapi_source');
  }
  
  function tearDown() {
    parent::tearDown();
  }
    
   /**
  * Test that Source Extractor corrctly gets destination URLs from complex URLs
  */
  function testFeedAPISourceTestRankingCalc() {       
    $expectedValue = TRUE;
    $this->assertEqual(TRUE, $expectedValue, t('Rankings Unimplemented Test'));
  }


  /**
  * Test the ability to extract Original URLs for Mentions
  */
  function testFeedAPISourceTestOriginalURLExtraction() {

    $testFeedURL = "http://wirelessfederation.com/news/idea-gets-100-mln-monitory-support-from-ifc-india/";
    $source = new MentionSourceExtractor ( $testFeedURL, "get_original_url" );    
    
    $expectedValue = $testFeedURL; //default is a trivial implementation
    $this->assertEqual($source->url,$expectedValue, t('Simple Original URL Extracted'));
  
    $testFeedURL = "http://digg.com/environment/Leaked_Report_Biofuels_Are_the_Cause_of_Global_Food_Crisis";
    $source = new MentionSourceExtractor ( $testFeedURL, "get_original_url" );    
    
    $expectedValue = "http://www.guardian.co.uk/environment/2008/jul/03/biofuels.renewableenergy";
    $this->assertEqual($source->url,$expectedValue, t('Digg-obfuscated Original URL Extracted'));
    
  }

  /**
  * Test the ability to extract Feed Sources for Mention URLs
  */
  function testFeedAPISourceTestSourceURLExtraction() {

    // This one is actually returning a network URL rather than individual blogger's one, but
    // their URL structure really sucks. Maybe down the road we can wrie an extractor/retriever for them.
    $testFeedURL = "http://hubpages.com/hub/The_Truth_About_Wu-Yi_Tea";
    $expectedValue = "http://hubpages.com";
    $source = new MentionSourceExtractor ( $testFeedURL, "get_source_url" );    
    $this->assertEqual($source->url,$expectedValue, t('Source Blog Extraction Test1'));    

    $testFeedURL = "http://www.freshblurbs.com/joomla-stole-world-bank-logo";
    $expectedValue = "http://www.freshblurbs.com";
    $source = new MentionSourceExtractor ( $testFeedURL, "get_source_url" );    
    $this->assertEqual($source->url,$expectedValue, t('Source Blog Extraction Test2'));    

    $testFeedURL = "http://www.guardian.co.uk/environment/2008/jul/03/biofuels.renewableenergy";
    $expectedValue = "http://www.guardian.co.uk/environment";
    $source = new MentionSourceExtractor ( $testFeedURL, "get_source_url" );    
    $this->assertEqual($source->url,$expectedValue, t('Source Blog Extraction Test3'));
    
//    $this->pass(print_r ($source, true )); //Debug    
    
  }

  /**
  * Test the ability to extract Site Title
  */
  function testFeedAPISourceTestSiteTitleDetection() {
    $testSiteURL = "http://www.freshblurbs.com";
    $expectedTitle = "Fresh Blurbs | by Irakli Nadareishvili";
    $source = new MentionSourceExtractor ( $testSiteURL );    
    $title = $source->getSiteTitle();
    
    $this->assertEqual( $title, $expectedTitle, "Site Title Detection Test");
  }

    // This one is actually returning a network URL rath
  /**
  * Test the ability to extract Feed Title and Site URL from a feed URL
  */
  function testFeedAPISourceTestFeedPropertiesExtraction() {
  
    $testFeedURL = "http://feeds.feedburner.com/freshblurbs";
    $source = new MentionSourceExtractor ( $testFeedURL );    
    $properties = $source->getFeedProperties();
    
    //$this->pass(print_r ($properties, true )); //Debug
    
    $this->assertEqual($properties->title,"Fresh Blurbs - by Irakli Nadareishvili",t("Feed Title Correctly Fetched"));
    $this->assertEqual($properties->link,"http://www.freshblurbs.com", t("Feed Link Correctly fetched"));    
  }
  
}

